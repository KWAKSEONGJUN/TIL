1. 가상환경
가상환경은 파이썬 프로젝트를 진행할 때 독립된 환경을 만들어 주는 도구이다.

파이썬 개발자 A가 2개의 파이썬 프로젝트를 개발한다고 할 때, 이 두 개의 프로젝트는
각각 다른 버전의 파이썬 또는 라이브러리를 요구할 수 있다.
이 때  하나의 데스크톱에 여러 버전의 파이썬을 설치해야 하는 문제가 생긴다.

하지만 가상 환경을 이용하면 하나의 데스크톱에 독립된 가상 환경 여러 개를 만들어 
다수의 파이썬 프로젝트를 각각 독립된 환경에서 개발할 수 있다.

2. 가상환경을 만들어 플라스크를 설치하기
나의 데스크톱에 파이썬 가상환경을 만들고, 이곳에 플라스크를 설치하여 웹사이트 제작을 위한 준비를 시작한다.


3. 플라스크 프로젝트 생성하기
플라스크에서 프로젝트는 하나의 웹사이트라고 생각하면 된다.
프로젝트 폴더를 생성하여 이곳에서 가상환경을 실행한다.

4. 에디터 설치

파이썬 개발을 효율적으로 하기 위해 에디터를 설치하고, 에디터를 가상환경과 연결해준다.

5. 첫 번째 애플리케이션 만들기
myproject 디렉토리에 pybo.py를 생성하고 다음과 같은 코드를 입력한다.

from flask import Flask

app = Flask(__name__)

@app.route('/')
def hello_pybo():
    return 'Hello, Pybo!'

 -flask 모듈을 import한다.
 - app 변수에 이 애플리케이션 이름인 'pybo'를 담는다.
 - @app.route는 특정 주소에 접속하면 바로 다음 줄에 있는 함수를 호출하는
플라스크의 데코레이터다. 즉, localhost에 접속하면 'Helloe, Pybo!' 문자열을 리턴하는 페이지가 호출된다.
  

